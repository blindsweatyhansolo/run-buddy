/* NOTES 
predence: ID > CLASS > ELEMENTS
source order: last declared style has precedence
adding !important to the end of a property will override any conflicts (not recommended)
inheritance: if a style isn't specified for child element, will use style specified for parent element
*/

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    /* box-sizing determines how to calculate width and height of each element, content-size is default
    calculates height and width by only counting the content box of the box model,
    border-box calculates height and width by including border and padding to the content */
    /* adding this will override the default browser stylings, in this case the margins
    and padding among elements for a "flush" look */
}

body {
    color: #39a6b2;
    font-family: Helvetica, Arial, sans-serif;
    }

header {
    padding: 20px 35px;
    background-color: #39a6b2;
}

header h1 {
    font-weight: bold;
    font-size: 36px;
    color: #fce138;
    margin: 0;
    display: inline;
}

header a {
    text-decoration: none;
    color: #fce138;
}

header nav {
    float: right;
    margin: 7px 0;
}

header nav ul li {
    display: inline;
    /* using display: inline changes the element from the default block display
    (using 100% of browser parent width, block elements force everything to a separate line)
    this allows for lining elements horizontally */
}

header nav ul li a {
    margin: 0 30px;
    font-weight: lighter;
    font-size: 22px;
}

footer {
    background: #fce138;
    width: 100%;
    padding: 40px 35px;
}

footer h2 {
    display: inline;
    color: #024e76;    
    font-size: 30px;
    margin: 0;
}

footer div {
    float: right;
    line-height: 1.5;
    text-align: right;
}

footer a {
    color: #024e76;
}

section {
    padding: 60px;
}

.hero {
    background-image: url("../images/hero-bg.jpg");
    height: 600px;
    background-size: cover;
    background-position: center;
    position: relative;
}

.hero-form {
    border: 3px solid #024e76;
    background-color: #fce138;
    padding: 20px;
    width: 500px;
    color: #024e76;
    position: absolute;
    bottom: 120px;
    right: 140px;
}
/* absolute positioning removes the element from the document flow to be placed in a 
specific place. REMEMBER: if you want an elements position to be absolute, you must first
declare its parent's position to be relative, to make sure it is relative to the parent and
not relative to the entire window*/

.hero-form h3 {
    font-size: 24px;
    margin: 0;
}

.hero-form p {
    margin: 5px 0 15px 0;
}

.form-input {
    border: 1px solid #024e76;
    display: block;
    padding: 7px 15px;
    font-size: 16px;
    color: #024e76;
    width: 100%;
    margin-bottom: 15px;
}

.hero-form label {
    margin: 0 5px;
}


.hero-form button {
    color: #fce138;
    background-color: #024e76;
    border: none;
    padding: 10px 20px;
    font-size: 16px;
}

.intro {
    text-align: center;
}

.intro p {
    line-height: 1.7;
    color: #39a6b2;
    width: 80%;
    font-size: 20px;
    margin: 0 auto;     /* this works only for horizontal centering, 0 = top and bottom, auto = left and right */
}

.steps {
    text-align: center;
    background: #fce138;
}

.steps div {
    margin-bottom: 80px;
}

.steps img {
    width: 15%;
    margin: 10px 0;
}

.steps h3 {
    color: #024e76;
    font-size: 46px;
    margin-top: 10px;
}

.steps p {
    color: #39a6b2;
    font-size: 23px;
}

.steps span {
    font-size: 38px;
}    
.section-title {
    font-size: 55px;
    color: #024e76;
    margin-bottom: 35px;
    padding: 0 100px 20px 100px;
    display: inline-block;
    border-bottom: 3px solid;
}
    
.primary-border {
    border-color: #fce138;
}
    
.secondary-border {
    border-color: #39a6b2;
}

.trainers {
    text-align: center;
}

.trainer {
    width: 900px;
    margin: 0 auto 30px auto;
    background: #024e76;
    color: #fce138;
    overflow: auto;
    /* overflow is used when an element's content is too big to fit in its block formatting context (BFC), by using this
    it helps create a new BFC that contains the float, by acting as a way to inform the <article> element about the context
    within, causing the parent element to become a mini-layout within the full layout */
}

.trainer img {
    width: 35%;
    float: left;
}

.trainer-bio {
    padding: 35px;
    float: left;
    width: 65%;
}

.trainer-bio h3 {
    font-size: 32px;
    margin-bottom: 8px;
}

.trainer-bio h4 {
    font-weight: lighter;
    font-size: 26px;
    margin-bottom: 25px;
}

.trainer-bio p {
    font-size: 17px;
    line-height: 1.3;
}

.text-left {
    text-align: left;
}

.text-right {
    text-align: right;
}

.contact {
    text-align: center;
    background-color: #024e76;
}

.contact h2 {
    color: #fce138;
}

.contact-info iframe {
    width: 400px;
    height: 400px;
}

.contact-info div {
    width: 400px;
    display: inline-block;
    vertical-align: top;
    text-align: left;
    margin: 30px 0 0 60px;
    color: white;
}